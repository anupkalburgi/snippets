"""
mutual exlusion is important
and to do that, we use synchronized, which gives exclusive acess to critical section

this.synchronized()

synchronized (

)

intersection 
intuition 
"""

# sort it, 
def sum_three(A, target ):
    answers = []
    for idx, elm in enumerate(A):
        l = i+1
        h = len(A) -1
        while l < h:
            eml_sum = elm + A[l] + A[h]
            if elm_sum == target:
                answers.append([elm, A[l], A[h])
                l = l+1
                h = h-1
            if elm_sum > target:
                h = h -1 
            else:
                l = l + 1
    return elm_sum

#